var Blockly = {}; Blockly.Msg={};  module.exports = function(){ // This file was automatically generated.  Do not modify.

'use strict';





/** @export */ Blockly.Msg.ADD_COMMENT = "Adicionar comentário";
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Não se pode deletar a variável '%1' porque é parte da definição da função '%2'";
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Mudar valor:";
/** @export */ Blockly.Msg.CLEAN_UP = "Limpar blocos";
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Colapsar Blocos";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Colapsar Bloco";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "cor 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "cor 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "proporção";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "misturar";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mistura duas cores em uma dada proporção (0,0 - 1,0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://pt.wikipedia.org/wiki/Cor";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Escolher uma cor da palheta de cores.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "cor aleatória";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Escolher cor de forma aleatória.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "azul";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "verde";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "vermelho";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "colorir com";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Criar uma cor com a quantidade especificada de vermelho, verde e azul. Todos os valores devem estar entre 0 e 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "encerra o laço";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continua com a próxima iteração do laço";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Encerra o laço.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Ignora o resto deste laço, e continua com a próxima iteração.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Atenção: Este bloco só pode ser usado dentro de um laço.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada item %1 na lista %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada item em uma lista, atribua o item à variável '%1' e então realize algumas instruções.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "contar com %1 de %2 até %3 por %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faça com que a variável '%1' assuma os valores do número inicial ao número final, contando de acordo com o intervalo especificado e execute os blocos especificados.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Acrescente uma condição para o bloco se.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Acrescente uma condição final para o bloco se.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Acrescente, remova ou reordene seções para reconfigurar este bloco.";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "senão";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "senão se";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "se";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Se um valor for verdadeiro, então realize algumas instruções.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Se um valor for verdadeiro, então realize o primeiro bloco de instruções. Senão, realize o segundo bloco de instruções.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Se o primeiro valor é verdadeiro, então realize o primeiro bloco de instruções.  Senão, se o segundo valor é verdadeiro, realize o segundo bloco de instruções.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Se o primeiro valor for verdadeiro, então realize o primeiro bloco de instruções. Senão, se o segundo valor é verdadeiro, realize o segundo bloco de instruções. Se nenhum dos blocos for verdadeiro, realize o último bloco de instruções.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://pt.wikipedia.org/wiki/Estrutura_de_repeti%C3%A7%C3%A3o#Repeti.C3.A7.C3.A3o_com_vari.C3.A1vel_de_controle";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faça";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "repita %1 vezes";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Faça algumas instruções várias vezes.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repita até";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repita enquanto";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Enquanto um valor for falso, então faça algumas instruções.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Enquanto um valor for verdadeiro, então faça algumas instruções.";
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Deletar todos os blocos %1?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Deletar bloco";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Deletar a variável '%1'";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Deletar %1 usos da variável '%2'?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Deletar %1 blocos";
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Desabilitar bloco";
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Habilitar bloco";
/** @export */ Blockly.Msg.EXPAND_ALL = "Expandir blocos";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Expandir bloco";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
/** @export */ Blockly.Msg.HELP = "Ajuda";
/** @export */ Blockly.Msg.INLINE_INPUTS = "Entradas incorporadas";
/** @export */ Blockly.Msg.IOS_CANCEL = "blockly:IOS Cancelar/pt-br";
/** @export */ Blockly.Msg.IOS_ERROR = "Erro";
/** @export */ Blockly.Msg.IOS_OK = "Ok";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Adicionar Entrada";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Permitir declarações";
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "Essa função tem entradas duplicadas.";
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "ENTRADAS";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "Adicionar";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Adicionar Variável";
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "Deletar";
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "Você não pode usar um nome de variável vazio.";
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "Blockly:Renomear varioas botoens/pt-br";
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "Nome variavel";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "criar lista vazia";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Retorna uma lista, de tamanho 0, contendo nenhum registro";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Acrescenta, remove ou reordena seções para reconfigurar este bloco de lista.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "criar lista com";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Acrescenta um item à lista.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Cria uma lista com a quantidade de itens informada.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "primeiro";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "nº a partir do final";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "nº";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "obter";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obter e remover";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatório";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "remover";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Retorna o primeiro item em uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Retorna o item da lista na posição especificada.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Retorna o último item em uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Retorna um item aleatório de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Remove e retorna o primeiro item de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Remove e retorna o item na posição especificada em uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Remove e retorna o último item de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Remove e retorna um item aleatório de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Remove o primeiro item de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Remove o item na posição especificada em uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Remove o último item de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Remove um item aleatório de uma lista.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "até nº a partir do final";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "até nº";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "até último";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtém sublista a partir do primeiro";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtém sublista de nº a partir do final";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtém sublista de nº";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Cria uma cópia da porção especificada de uma lista.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 é o último item.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 é o primeiro item.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontre a primeira ocorrência do item";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "encontre a última ocorrência do item";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Retorna o índice da primeira/última ocorrência do item na lista.  Retorna %1 se o item não for encontrado.";
/** @export */ Blockly.Msg.LISTS_INLIST = "na lista";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 é vazia";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Retorna ao verdadeiro se a lista estiver vazia.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "tamanho de %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Retorna o tamanho de uma lista.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "criar lista com item %1 repetido %2 vezes";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Cria uma lista consistindo no valor informado repetido o número de vezes especificado.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Listas#invertendo-uma-lista";
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "inverter %1";
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Inverter uma cópia da lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "inserir em";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "definir";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insere o item no início de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Insere o item na posição especificada em uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Insere o item no final de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insere o item em uma posição qualquer de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Define o primeiro item de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Define o item da posição especificada de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Define o último item de uma lista.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Define um item aleatório de uma lista.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascendente";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descendente";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "ordenar %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Ordenar uma cópia de uma lista.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabético, ignorar maiúscula/minúscula";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérico";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabético";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "Fazer uma lista a partir do texto";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "fazer um texto a partir da lista";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Juntar uma lista de textos em um único texto, separado por um delimitador.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir o texto em uma lista de textos, separando-o em cada delimitador.";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "com delimitador";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Retorna verdadeiro ou falso.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadeiro";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://pt.wikipedia.org/wiki/Inequa%C3%A7%C3%A3o";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Retorna verdadeiro se ambas as entradas forem iguais.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Retorna verdadeiro se a primeira entrada for maior que a segunda entrada.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Retorna verdadeiro se a primeira entrada for maior ou igual à segunda entrada.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Retorna verdadeiro se a primeira entrada for menor que a segunda entrada.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Retorna verdadeiro se a primeira entrada for menor ou igual à segunda entrada.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Retorna verdadeiro se ambas as entradas forem diferentes.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "não %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Retorna verdadeiro se a entrada for falsa.  Retorna falsa se a entrada for verdadeira.";
/** @export */ Blockly.Msg.LOGIC_NULL = "nulo";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Retorna nulo.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "e";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "ou";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Retorna verdadeiro se ambas as entradas forem verdadeiras.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Retorna verdadeiro se uma das estradas for verdadeira.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "teste";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "se falso";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "se verdadeiro";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Avalia a condição em \"teste\". Se a condição for verdadeira retorna o valor \"se verdadeiro\", senão retorna o valor \"se falso\".";
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://pt.wikipedia.org/wiki/Aritm%C3%A9tica";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Retorna a soma dos dois números.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Retorna o quociente da divisão dos dois números.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Retorna a diferença entre os dois números.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Retorna o produto dos dois números.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Retorna o primeiro número elevado à potência do segundo número.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://pt.wikipedia.org/wiki/Adi%C3%A7%C3%A3o";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "alterar %1 por %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Soma um número à variável \"%1\".";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://pt.wikipedia.org/wiki/Anexo:Lista_de_constantes_matem%C3%A1ticas";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Retorna uma das constantes comuns: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infinito).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "restringe %1 inferior %2 superior %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Restringe um número entre os limites especificados (inclusivo).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "é divisível por";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "é par";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "é negativo";
/** @export */ Blockly.Msg.MATH_IS_ODD = "é ímpar";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "é positivo";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "é primo";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Verifica se um número é par, ímpar, inteiro, positivo, negativo, ou se é divisível por outro número.  Retorna verdadeiro ou falso.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "é inteiro";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://pt.wikipedia.org/wiki/Opera%C3%A7%C3%A3o_m%C3%B3dulo";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "resto da divisão de %1 ÷ %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Retorna o resto da divisão de dois números.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://pt.wikipedia.org/wiki/N%C3%BAmero";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "Um número.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "média da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maior da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "menor da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "moda da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "item aleatório da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desvio padrão da lista";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "soma de uma lista";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Retorna a média aritmética dos números da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Retorna o maior número da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Retorna a mediana dos números da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Retorna o menor número da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Retorna uma lista do(s) item(ns) mais comum(ns) da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Retorna um elemento aleatório da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Retorna o desvio padrão dos números da lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Retorna a soma de todos os números na lista.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://pt.wikipedia.org/wiki/Gerador_de_n%C3%BAmeros_pseudoaleat%C3%B3rios";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fração aleatória";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Retorna uma fração aleatória entre 0.0 (inclusivo) e 1.0 (exclusivo).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://pt.wikipedia.org/wiki/Gerador_de_n%C3%BAmeros_pseudoaleat%C3%B3rios";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "inteiro aleatório entre %1 e %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Retorna um número inteiro entre os dois limites informados, inclusivo.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://pt.wikipedia.org/wiki/Arredondamento";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arredonda";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arredonda para baixo";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arredonda para cima";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Arredonda um número para cima ou para baixo.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://pt.wikipedia.org/wiki/Raiz_quadrada";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "raiz quadrada";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Retorna o valor absoluto de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Retorna o número e elevado à potência de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Retorna o logaritmo natural de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Retorna o logaritmo em base 10 de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Retorna o oposto de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Retorna 10 elevado à potência de um número.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Retorna a raiz quadrada de um número.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://pt.wikipedia.org/wiki/Fun%C3%A7%C3%A3o_trigonom%C3%A9trica";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Retorna o arco cosseno de um número.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Retorna o arco seno de um número.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Retorna o arco tangente de um número.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Retorna o cosseno de um grau (não radiano).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Retorna o seno de um grau (não radiano).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Retorna a tangente de um grau (não radiano).";
/** @export */ Blockly.Msg.NEW_COLOUR_VARIABLE = "Criar variável colorida...";
/** @export */ Blockly.Msg.NEW_NUMBER_VARIABLE = "Criar variável numérica...";
/** @export */ Blockly.Msg.NEW_STRING_VARIABLE = "Criar variável de segmentos de texto...";
/** @export */ Blockly.Msg.NEW_VARIABLE = "Criar variável...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "Nome da nova variável:";
/** @export */ Blockly.Msg.NEW_VARIABLE_TYPE_TITLE = "Tipo da nova variável:";
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declarações";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "com:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://pt.wikipedia.org/wiki/Sub-rotina";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Executa a função definida pelo usuário \"%1\".";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://pt.wikipedia.org/wiki/Sub-rotina";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Executa a função definida pelo usuário \"%1\" e usa seu retorno.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "com:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Criar \"%1\"";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Descreva esta função...";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faça algo";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "para";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Cria uma função que não tem retorno.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retorna";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Cria uma função que possui um valor de retorno.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Atenção: Esta função tem parâmetros duplicados.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definição da função";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Se um valor é verdadeiro, então retorna um valor.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Atenção: Este bloco só pode ser utilizado dentro da definição de uma função.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nome da entrada:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Adiciona uma entrada para esta função";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Adiciona, remove, ou reordena as entradas para esta função.";
/** @export */ Blockly.Msg.REDO = "Refazer";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Remover comentário";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Renomear variável...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Renomear todas as variáveis '%1' para:";
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "para %1 anexar texto %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "Acrescentar um pedaço de texto à variável \"%1\".";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "para minúsculas";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "para Nomes Próprios";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "para MAIÚSCULAS";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Retorna uma cópia do texto em um formato diferente.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "obter primeira letra";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "obter letra # a partir do final";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "obter letra nº";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "obter última letra";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "obter letra aleatória";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "no texto %1 %2";
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Retorna a letra na posição especificada.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "Contar %1 em %2";
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Calcule quantas vezes algum texto aparece centro de algum outro texto.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Acrescentar um item ao texto.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Acrescenta, remove ou reordena seções para reconfigurar este bloco de texto.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "até letra nº a partir do final";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "até letra nº";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "até última letra";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "no texto";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obter trecho de primeira letra";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obter trecho de letra nº a partir do final";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obter trecho de letra nº";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Retorna o trecho de texto especificado.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontre a primeira ocorrência do item";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontre a última ocorrência do texto";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "no texto %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Retorna a posição da primeira/última ocorrência do primeiro texto no segundo texto.  Retorna %1 se o texto não for encontrado.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 é vazio";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Retorna verdadeiro se o texto fornecido for vazio.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "criar texto com";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Criar um pedaço de texto juntando qualquer número de itens.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "tamanho de %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Retorna o número de letras (incluindo espaços) no texto fornecido.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "imprime %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprime o texto, número ou valor especificado.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Pede ao usuário um número.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Pede ao usuário um texto.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Pede um número com uma mensagem";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Pede um texto com uma mensagem";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Texto#substituindo-substrings";
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "substituir %1 por %2 em %3";
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Substitua todas as ocorrências de algum texto dentro de algum outro texto.";
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Texto#invertendo-texto";
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "inverter %1";
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Inverter a ordem dos caracteres no texto.";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://pt.wikipedia.org/wiki/Cadeia_de_caracteres";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "Uma letra, palavra ou linha de texto.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "remover espaços de ambos os lados de";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "remover espaços à esquerda de";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "remover espaços à direita de";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Retorna uma cópia do texto com os espaços removidos de uma ou ambas extremidades.";
/** @export */ Blockly.Msg.TODAY = "Hoje";
/** @export */ Blockly.Msg.UNDO = "Desfazer";
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Criar \"definir %1\"";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Retorna o valor desta variável.";
/** @export */ Blockly.Msg.VARIABLES_SET = "definir %1 para %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Criar \"obter %1\"";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Define esta variável para o valor da entrada.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variável chamada '%1' já existe.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "Já existe uma variável chamada '%1' para outra do tipo: '%2'.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.VARIABLES_DYNAMIC_HUE = "310";return Blockly.Msg;}