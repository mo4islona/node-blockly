var Blockly = {}; Blockly.Msg={};  module.exports = function(){ // This file was automatically generated.  Do not modify.

'use strict';





/** @export */ Blockly.Msg.ADD_COMMENT = "Добавить комментарий";
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Невозможно удалить переменную '%1', поскольку она является частью определения функции '%2'";
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Измените значение:";
/** @export */ Blockly.Msg.CLEAN_UP = "Убрать блоки";
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Свернуть блоки";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Свернуть блок";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "цвет 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "цвет 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "доля цвета 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "смешать";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ru.wikipedia.org/wiki/Цвет";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Выберите цвет из палитры.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "случайный цвет";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Выбирает цвет случайным образом.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "синего";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "зелёного";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "красного";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "цвет из";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Создаёт цвет с указанной пропорцией  красного, зеленого и синего.  Все значения должны быть между 0 и 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "выйти из цикла";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "перейти к следующему шагу цикла";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Прерывает этот цикл.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропускает остаток цикла и переходит к следующему шагу.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Предупреждение: этот блок может использоваться только внутри цикла.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "для каждого элемента %1 в списке %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "цикл по %1 от %2 до %3 с шагом %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Добавляет условие к блоку \"если\"";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Добавить заключительный подблок для случая, когда все условия ложны.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "иначе";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "иначе если";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "если";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Если условие истинно, выполняет команды.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "выполнить";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторить %1 раз";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Выполняет некоторые команды несколько раз.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторять, пока не";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторять, пока";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Пока значение ложно, выполняет команды";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Пока значение истинно, выполняет команды.";
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Удалить все блоки (%1)?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Удалить блок";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Удалить переменную '%1'";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Удалить %1 использований переменной '%2'?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Удалить %1 блоков";
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Отключить блок";
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Дублировать";
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Включить блок";
/** @export */ Blockly.Msg.EXPAND_ALL = "Развернуть блоки";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Развернуть блок";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "Вставки снаружи";
/** @export */ Blockly.Msg.HELP = "Справка";
/** @export */ Blockly.Msg.INLINE_INPUTS = "Вставки внутри";
/** @export */ Blockly.Msg.IOS_CANCEL = "Отмена";
/** @export */ Blockly.Msg.IOS_ERROR = "Ошибка";
/** @export */ Blockly.Msg.IOS_OK = "ОК";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Добавить входную переменную";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Разрешить операторы";
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "У этой функции есть дублирующиеся входные переменные.";
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "ВХОД";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "Добавить";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Добавить переменную";
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "Удалить";
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "Вы не можете использовать пустое имя переменной.";
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "Переименовать";
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "Имя переменной";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "создать пустой список";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Возвращает список длины 0, не содержащий данных";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "создать список из";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Добавляет элемент к списку.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Создаёт список с любым числом элементов.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "первый";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "№ с конца";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "взять";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "взять и удалить";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "последний";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "произвольный";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "удалить";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Возвращает первый элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Возвращает элемент в указанной позиции списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Возвращает последний элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Возвращает случайный элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Удаляет и возвращает первый элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Удаляет и возвращает элемент в указанной позиции списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Удаляет и возвращает последний элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Удаляет и возвращает случайный элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Удаляет первый элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Удаляет элемент в указанной позиции списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Удаляет последний элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Удаляет случайный элемент списка.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "по № с конца";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "по №";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "по последний";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "взять подсписок с первого";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "взять подсписок с № с конца";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "взять подсписок с №";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Создаёт копию указанной части списка.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 - последний элемент.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 - первый элемент.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "найти первое вхождение элемента";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "найти последнее вхождение элемента";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает %1, если элемент не найден.";
/** @export */ Blockly.Msg.LISTS_INLIST = "в списке";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 пуст";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Возвращает значение истина, если список пуст.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "длина %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Возвращает длину списка.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "создать список из элемента %1, повторяющегося %2 раз";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Создаёт список, состоящий из заданного числа копий элемента.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "изменить порядок на обратный %1";
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Изменить порядок списка на обратный.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "=";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставить в";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "присвоить";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляет элемент в начало списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Вставляет элемент в указанной позиции списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Добавляет элемент в конец списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Вставляет элемент в случайное место в списке.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Присваивает значение первому элементу списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Присваивает значение элементу в указанной позиции списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Присваивает значение последнему элементу списка.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Присваивает значение случайному элементу списка.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "по возрастанию";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "по убыванию";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "сортировать %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Сортировать копию списка.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "по алфавиту, без учёта регистра";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "числовая";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "по алфавиту";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "сделать список из текста";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "собрать текст из списка";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Соединяет список текстов в один текст с разделителями.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Разбивает текст в список текстов, по разделителям.";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "с разделителем";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ложь";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Возвращает значение истина или ложь.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "истина";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ru.wikipedia.org/wiki/Неравенство";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Возвращает положительное значение, если вводы равны.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Возвращает значение истина, если первая вставка больше второй.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Возвращает значение истина, если первая вставка больше или равна  второй.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Возвращает положительное значение, если первый ввод меньше второго.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Возвращает положительное значение, если вводы не равны.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Возвращает значение истина, если вставка ложна. Возвращает значение ложь, если вставка истинна.";
/** @export */ Blockly.Msg.LOGIC_NULL = "ничто";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Возвращает ничто.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "и";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "или";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Возвращает значение истина, если обе вставки истинны.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "выбрать по";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "если ложь";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "если истина";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ru.wikipedia.org/wiki/Арифметика";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Возвращает сумму двух чисел.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Возвращает частное от деления первого числа на второе.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Возвращает разность двух чисел.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Возвращает произведение двух чисел.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Возвращает первое число, возведённое в степень второго числа.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "увеличить %1 на %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Добавляет число к переменной '%1'.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ru.wikipedia.org/wiki/Математическая_константа";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "ограничить %1 снизу %2 сверху %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ограничивает число нижней и верхней границами (включительно).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "делится на";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "чётное";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "отрицательное";
/** @export */ Blockly.Msg.MATH_IS_ODD = "нечётное";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "положительное";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "простое";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "целое";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "остаток от %1 : %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Возвращает остаток от деления двух чисел.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://ru.wikipedia.org/wiki/Число";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "среднее арифметическое списка";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "наибольшее в списке";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медиана списка";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "наименьшее в списке";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моды списка";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "случайный элемент списка";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартное отклонение списка";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сумма списка";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Возвращает среднее арифметическое списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Возвращает наибольшее число списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Возвращает медиану списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Возвращает наименьшее число списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Возвращает список наиболее часто встречающихся элементов списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Возвращает случайный элемент списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Возвращает стандартное отклонение списка.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Возвращает сумму всех чисел в списке.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "случайное число от 0 (включительно) до 1";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "случайное целое число от %1 для %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Возвращает случайное число между двумя заданными пределами (включая и их).";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://ru.wikipedia.org/wiki/Округление";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлить";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "округлить к меньшему";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "округлить к большему";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Округляет число до большего или меньшего.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://ru.wikipedia.org/wiki/Квадратный_корень";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратный корень";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Возвращает модуль числа";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Возвращает е в указанной степени.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Возвращает натуральный логарифм числа.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Возвращает десятичный логарифм числа.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Возвращает противоположное число.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Возвращает 10 в указанной степени.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Возвращает квадратный корень числа.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Возвращает арккосинус (в градусах).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Возвращает арксинус (в градусах).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Возвращает арктангенс (в градусах)";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Возвращает косинус угла в градусах.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Возвращает синус угла в градусах.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Возвращает тангенс угла в градусах.";
/** @export */ Blockly.Msg.NEW_COLOUR_VARIABLE = "Создать переменную цвета...";
/** @export */ Blockly.Msg.NEW_NUMBER_VARIABLE = "Создать числовую переменную...";
/** @export */ Blockly.Msg.NEW_STRING_VARIABLE = "Создать строковую переменную...";
/** @export */ Blockly.Msg.NEW_VARIABLE = "Создать переменную…";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "Имя новой переменной:";
/** @export */ Blockly.Msg.NEW_VARIABLE_TYPE_TITLE = "Новый тип переменной:";
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "разрешить операторы";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "с:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ru.wikipedia.org/wiki/Подпрограмма";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1'.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ru.wikipedia.org/wiki/Подпрограмма";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "с:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Создать вызов '%1'";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Опишите эту функцию…";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "выполнить что-то";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "чтобы";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Создаёт процедуру, не возвращающую значение.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "вернуть";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Создаёт процедуру, возвращающую значение.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Предупреждение: эта функция имеет повторяющиеся параметры.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Выделить определение процедуры";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Если первое значение истинно, возвращает второе значение.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "имя параметра:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Добавить входной параметр в функцию.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "параметры";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
/** @export */ Blockly.Msg.REDO = "Повторить";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Удалить комментарий";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Переименовать переменную…";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Переименовать все переменные '%1' в:";
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "к %1 добавить текст %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "Добавить текст к переменной «%1».";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "в строчные буквы";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "в Заглавные Начальные Буквы";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "в ЗАГЛАВНЫЕ БУКВЫ";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "взять первую букву";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "взять букву № с конца";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "взять букву №";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "взять последнюю букву";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "взять случайную букву";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "в тексте %1 %2";
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Возвращает букву в указанной позиции.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "подсчитать количество %1 в %2";
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Подсчитать, сколько раз отрывок текста появляется в другом тексте.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Добавить элемент к тексту.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "соединить";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "по букву № с конца";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "по букву №";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "по последнюю букву";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "в тексте";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "взять подстроку с первой буквы";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "взять подстроку с буквы № с конца";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "взять подстроку с буквы №";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Возвращает указанную часть текста.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "найти первое вхождение текста";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "найти последнее вхождение текста";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "в тексте %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает %1, если текст не найден.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 пуст";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Возвращает значение истина, если предоставленный текст пуст.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "создать текст из";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Создаёт фрагмент текста, объединяя любое число элементов";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "длина %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Возвращает число символов (включая пробелы) в заданном тексте.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "напечатать %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Печатает текст, число или другой объект.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запросить у пользователя число.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запросить у пользователя текст.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запросить число с подсказкой";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запросить текст с подсказкой";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "заменить %1 на %2 в %3";
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Заменить все вхождения некоторого текста другим текстом.";
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#reversing-text";
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "изменить порядок на обратный %1";
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Меняет порядок символов в тексте на обратный.";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://ru.wikipedia.org/wiki/Строковый_тип";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "Буква, слово или строка текста.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "обрезать пробелы с двух сторон";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "обрезать пробелы слева";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "обрезать пробелы справа";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Возвращает копию текста с пробелами, удалёнными с одного или обоих концов.";
/** @export */ Blockly.Msg.TODAY = "Сегодня";
/** @export */ Blockly.Msg.UNDO = "Отменить";
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "элемент";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Создать блок \"присвоить\" для %1";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Возвращает значение этой переменной.";
/** @export */ Blockly.Msg.VARIABLES_SET = "присвоить %1 = %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Создать вставку %1";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Присваивает переменной значение вставки.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Переменная с именем '%1' уже существует.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "Название переменной '%1' уже используется другой типа: '%2'.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.VARIABLES_DYNAMIC_HUE = "310";return Blockly.Msg;}