var Blockly = {}; Blockly.Msg={};  module.exports = function(){ // This file was automatically generated.  Do not modify.

'use strict';





/** @export */ Blockly.Msg.ADD_COMMENT = "Dodaj Komentarz";
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Nie można usunąć zmiennej '%1', ponieważ jest częścią definicji funkcji '%2'";
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Zmień wartość:";
/** @export */ Blockly.Msg.CLEAN_UP = "Uporządkuj Bloki";
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Zwiń Bloki";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Zwiń Klocek";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "kolor 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "kolor 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "proporcja";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "wymieszaj";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Miesza dwa kolory w danej proporcji (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Wybierz kolor z palety.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "losowy kolor";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Wybierz kolor w sposób losowy.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "niebieski";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "zielony";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "czerwony";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "kolor z";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Utwórz kolor składający sie z podanej ilości czerwieni, zieleni i błękitu. Zakres wartości: 0 do 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "przerwij pętlę";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "przejdź do kolejnej iteracji pętli";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Przerwij działanie pętli.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Pomiń resztę pętli i kontynuuj w kolejnej iteracji.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Uwaga: Ten klocek może być użyty tylko wewnątrz pętli.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "dla każdego elementu %1 listy %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Przypisz zmiennej '%1' kolejno wartość każdego elementu listy, a następnie wykonaj kilka instrukcji.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "licz z %1 od %2 do %3 co %4 (wartość kroku)";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Zmiennej '%1' przypisuje wartości z podanego zakresu z podanym interwałem i wykonuje zadane bloki.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Dodaj warunek do klocka „jeśli”.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Dodaj ostatni zawsze prawdziwy warunek do klocka „jeśli”.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Dodaj, usuń lub zmień kolejność czynności, żeby zmodyfikować ten klocek „jeśli”.";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "w przeciwnym razie";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "w przeciwnym razie, jeśli";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "jeśli";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Jeśli warunek jest spełniony, wykonaj zadane czynności.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Jeśli warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, wykonaj drugi blok instrukcji.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok instrukcji.  W przeciwnym razie, jeśli drugi warunek jest spełniony, wykonaj drugi blok instrukcji.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Jeśli pierwszy warunek jest spełniony, wykonaj pierwszy blok czynności.  W przeciwnym razie jeśli drugi warunek jest spełniony, wykonaj drugi blok czynności.  Jeżeli żaden z warunków nie zostanie spełniony, wykonaj ostatni blok czynności.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "wykonaj";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "powtórz %1 razy";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Wykonaj niektóre instrukcje kilka razy.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "powtarzaj aż do";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "powtarzaj dopóki";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Dopóki wyrażenie jest nieprawdziwe, wykonaj zadane czynności.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Dopóki wyrażenie jest prawdziwe, wykonaj zadane czynności.";
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Usunąć wszystkie klocki z %1?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Usuń Klocek";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Usuń zmienną '%1'";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Usunąć %1 wystąpień zmiennej '%2'?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Usuń %1 Bloki(ów)";
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Wyłącz Klocek";
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Powiel";
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Włącz Blok";
/** @export */ Blockly.Msg.EXPAND_ALL = "Rozwiń Bloki";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Rozwiń Klocek";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "Zewnętrzne Wejścia";
/** @export */ Blockly.Msg.HELP = "Pomoc";
/** @export */ Blockly.Msg.INLINE_INPUTS = "Wbudowane Wejścia";
/** @export */ Blockly.Msg.IOS_CANCEL = "Anuluj";
/** @export */ Blockly.Msg.IOS_ERROR = "Błąd";
/** @export */ Blockly.Msg.IOS_OK = "OK";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Dodaj Wejście";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Zezwalaj na czynności.";
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "Ta funkcja ma zduplikowane wejścia.";
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "WEJŚCIA";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "Dodaj";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Dodaj Zmienną";
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "Usuń";
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "Nie możesz utworzyć funkcji bez nazwy.";
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "Zmień nazwę";
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "Nazwa zmiennej";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "utwórz pustą listę";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Zwraca listę o długości 0, nie zawierającą danych";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Dodaj, usuń lub zmień kolejność sekcji aby przekonfigurować blok tej listy.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "utwórz listę z";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Dodaj element do listy.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Utwórz listę z dowolną ilością elementów.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "pierwszy";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# od końca";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "pobierz";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "zabierz";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "ostatni";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "losowy";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "usuń";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Zwraca pierwszy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Zwraca element z konkretnej pozycji na liście.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Zwraca ostatni element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Zwraca losowy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Usuwa i zwraca pierwszy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Usuwa i zwraca element z określonej pozycji na liście.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Usuwa i zwraca ostatni element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Usuwa i zwraca losowy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Usuwa pierwszy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Usuwa element z określonej pozycji na liście.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Usuwa ostatni element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Usuwa losowy element z listy.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "do # od końca";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "do #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "do ostatniego";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "utwórz listę podrzędną od pierwszego";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "utwórz listę podrzędną z # od końca";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "utwórz listę podrzędną z #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Tworzy kopię żądanej części listy.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 to ostatni element.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 to pierwszy element.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "znajdź pierwsze wystąpienie elementu";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "znajdź ostatanie wystąpienie elementu";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Zwraca indeks pierwszego/ostatniego wystąpienia elementu z listy. Zwraca %1, jeśli nie zostanie znaleziony.";
/** @export */ Blockly.Msg.LISTS_INLIST = "na liście";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 jest pusta";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Zwraca \"prawda\" jeśli lista jest pusta.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "długość %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Zwraca długość listy.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "utwórz listę powtarzając %1 %2 razy.";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Tworzy listę zawierającą podaną wartość powtórzoną żądaną ilość razy.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "odwróć %1";
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Odwraca kolejność danych w kopii listy.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "jako";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "wstaw w";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "ustaw";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Wstawia element na początku listy.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Wstawia element na żądanej pozycji listy.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Dodaj element na koniec listy.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Wstawia element w losowym miejscu na liście.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Ustawia pierwszy element na liście.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Ustawia element w określonym miejscu na liście.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Ustawia ostatni element na liście.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Ustawia losowy element na liście.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "rosnąco";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "malejąco";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "sortuj %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Sortuj kopię listy.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabetycznie, ignoruj wielkość liter";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numerycznie";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabetycznie";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "utwórz listę z tekstu";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "utwórz tekst z listy";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Łączy listę tekstów w jeden tekst, rozdzielany separatorem.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Rozdziela tekst zgodnie z separatorem tworząc listę z powstałych elementów.";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "z separatorem";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "fałsz";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Zwraca 'prawda' lub 'fałsz'.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "prawda";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://pl.wikipedia.org/wiki/Nierówność";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Zwraca \"prawda\", jeśli wejścia są identyczne.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Zwraca \"prawda\" jeśli pierwsze wejście jest większe od drugiego.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Zwraca \"prawda\", jeśli pierwsze wejście jest większe lub równe drugiemu.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Zwraca \"prawda\" jeśli pierwsze wejście jest mniejsze od drugiego.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Zwraca \"prawda\", jeśli pierwsze wejście jest mniejsze lub równe drugiemu.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Zwraca \"prawda\", jeśli wejścia nie są identyczne.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "nie %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Zwraca \"prawda\", jeśli wejściu jest \"fałsz\". Zwraca \"fałsz\", jeśli na wejściu jest \"prawda\".";
/** @export */ Blockly.Msg.LOGIC_NULL = "nic";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Zwraca nic.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "i";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "lub";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Zwraca \"prawda\" jeśli na obydwóch wejściach jest \"prawda\".";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Zwraca \"prawda\" jeśli co najmniej na jednyk wejściu jest \"prawda\".";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "jeśli fałsz";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "jeśli prawda";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Sprawdź warunek w „test”. Jeśli warunek jest prawdziwy, to zwróci „jeśli prawda”; jeśli nie jest prawdziwy to zwróci „jeśli fałsz”.";
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://pl.wikipedia.org/wiki/Arytmetyka";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Zwróć sumę dwóch liczb.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Zwróć iloraz dwóch liczb.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Zwróć różnicę dwóch liczb.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Zwróć iloczyn dwóch liczb.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Zwróć pierwszą liczbę podniesioną do potęgi o wykładniku drugiej liczby.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "zmień %1 o %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Dodaj liczbę do zmiennej '%1'.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://pl.wikipedia.org/wiki/Stała_(matematyka)";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Zwróć jedną wspólną stałą: π (3.141), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) lub ∞ (nieskończoność).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "ogranicz %1 z dołu %2 z góry %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ogranicz liczbę, aby była w określonych granicach (włącznie).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "/";
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "jest podzielna przez";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "jest parzysta";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "jest ujemna";
/** @export */ Blockly.Msg.MATH_IS_ODD = "jest nieparzysta";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "jest dodatnia";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "jest liczbą pierwszą";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Sprawdź, czy liczba jest parzysta, nieparzysta, pierwsza, całkowita, dodatnia, ujemna, lub czy jest podzielna przez podaną liczbę. Zwraca wartość \"prawda\" lub \"fałsz\".";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "jest liczbą całkowitą";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://pl.wikipedia.org/wiki/Modulo";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "reszta z dzielenia %1 przez %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Zwróć resztę z dzielenia dwóch liczb przez siebie.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "Liczba.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "średnia elementów listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maksymalna wartość z listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimalna wartość z listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "dominanty listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "losowy element z listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "odchylenie standardowe listy";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma elementów listy";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Zwróć średnią (średnią arytmetyczną) wartości liczbowych z listy.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Zwróć największą liczbę w liście.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Zwróć medianę listy.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Zwróć najmniejszą liczbę w liście.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Zwróć listę najczęściej występujących elementów w liście.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Zwróć losowy element z listy.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Zwróć odchylenie standardowe listy.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Zwróć sumę wszystkich liczb z listy.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "losowy ułamek";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Zwróć losowy ułamek między 0.0 (włącznie), a 1.0 (wyłącznie).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "losowa liczba całkowita od %1 do %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Zwróć losową liczbę całkowitą w ramach dwóch wyznaczonych granic, włącznie.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://pl.wikipedia.org/wiki/Zaokrąglanie";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "zaokrąglij";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "zaokrąglij w dół";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "zaokrąglij w górę";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Zaokrąglij w górę lub w dół.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://pl.wikipedia.org/wiki/Pierwiastek_kwadratowy";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "wartość bezwzględna";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "pierwiastek kwadratowy";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Zwróć wartość bezwzględną danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Zwróć e do potęgi danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Zwróć logarytm naturalny danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Zwraca logarytm dziesiętny danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Zwróć negację danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Zwróć 10 do potęgi danej liczby.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Zwróć pierwiastek kwadratowy danej liczby.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "arccos";
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "arcsin";
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "arctg";
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://pl.wikipedia.org/wiki/Funkcje_trygonometryczne";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tg";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Zwróć arcus cosinus danej liczby.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Zwróć arcus sinus danej liczby.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Zwróć arcus tangens danej liczby.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Zwróć wartość cosinusa o stopniu (nie w radianach).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Zwróć wartość sinusa o stopniu (nie w radianach).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Zwróć tangens o stopniu (nie w radianach).";
/** @export */ Blockly.Msg.NEW_COLOUR_VARIABLE = "Create colour variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_NUMBER_VARIABLE = "Create number variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_STRING_VARIABLE = "Create string variable...";  // untranslated
/** @export */ Blockly.Msg.NEW_VARIABLE = "Utwórz zmienną...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "Nowa nazwa zmiennej:";
/** @export */ Blockly.Msg.NEW_VARIABLE_TYPE_TITLE = "New variable type:";  // untranslated
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "zezwól na czynności";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "z:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://pl.wikipedia.org/wiki/Podprogram";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Uruchom zdefiniowaną przez użytkownika funkcję '%1'.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://pl.wikipedia.org/wiki/Podprogram";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Uruchom zdefiniowaną przez użytkownika funkcję '%1' i użyj jej wyjścia.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "z:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Utwórz '%1'";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Opisz tę funkcję...";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "zrób coś";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "do";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Tworzy funkcję nie posiadającą wyjścia.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "zwróć";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Tworzy funkcję posiadającą wyjście.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Uwaga: Ta funkcja ma powtórzone parametry.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Podświetl definicję funkcji";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Jeśli warunek jest spełniony zwróć drugą wartość.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Uwaga: Ten klocek może być używany tylko w definicji funkcji.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nazwa wejścia:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Dodaj wejście do funkcji.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "wejścia";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Dodaj, usuń lub zmień kolejność wejść tej funkcji.";
/** @export */ Blockly.Msg.REDO = "Ponów";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Usuń komentarz";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Zmień nazwę zmiennej...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Zmień nazwy wszystkich '%1' zmiennych na:";
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "dodaj tekst %2 do %1";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "Dołącz tekst do zmiennej '%1'.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "na małe litery";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "na Pierwsza Duża";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "na WIELKIE LITERY";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Zwraca kopię tekstu z odwruconą wielkością liter.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "pobierz pierwszą literę";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "pobierz literę # od końca";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "pobierz literę #";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "pobierz ostatnią literę";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "pobierz losową literę";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "w tekście %1 %2";
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Zwraca literę z określonej pozycji.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "policz %1 w %2";
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Liczy ile razy dany tekst występuje w innym tekście.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Dodaj element do tekstu.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "połącz";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Dodaj, usuń lub zmień kolejność sekcji, aby zmodyfikować klocek tekstowy.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "do # litery od końca";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "do # litery";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "do ostatniej litery";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "w tekście";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "pobierz podciąg od pierwszej litery";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "pobierz podciąg od # litery od końca";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "pobierz podciąg od # litery";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Zwraca określoną część tekstu.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "znajdź pierwsze wystąpienie tekstu";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "znajdź ostatnie wystąpienie tekstu";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "w tekście %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Zwraca indeks pierwszego/ostatniego wystąpienia pierwszego tekstu w drugim tekście. Zwraca wartość %1, jeśli tekst nie został znaleziony.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 jest pusty";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Zwraca prawda (true), jeśli podany tekst jest pusty.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "utwórz tekst z";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Tworzy fragment tekstu, łącząc ze sobą dowolną liczbę tekstów.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "długość %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Zwraca liczbę liter (łącznie ze spacjami) w podanym tekście.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "wydrukuj %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Wyświetl określony tekst, liczbę lub inną wartość.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Zapytaj użytkownika  o liczbę.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Zapytaj użytkownika o jakiś tekst.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "poproś o liczbę z tą wiadomością";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "poproś o tekst z tą wiadomością";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "zamień %1 na %2 w %3";
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Zastąp wszystkie wystąpienia danego tekstu innym.";
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#reversing-text";
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "odwróć %1";
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Odwraca kolejność znaków w tekście.";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://pl.wikipedia.org/wiki/Tekstowy_typ_danych";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "Litera, wyraz lub linia tekstu.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "usuń spacje po obu stronach";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "usuń spacje z lewej strony";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "usuń spacje z prawej strony";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Zwraca kopię tekstu z usuniętymi spacjami z jednego lub z obu końców tekstu.";
/** @export */ Blockly.Msg.TODAY = "Dzisiaj";
/** @export */ Blockly.Msg.UNDO = "Cofnij";
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Utwórz klocek 'ustaw %1'";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Zwraca wartość tej zmiennej.";
/** @export */ Blockly.Msg.VARIABLES_SET = "przypisz %1 wartość %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Utwórz klocek 'pobierz %1'";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Wartości zmiennej i  wejście będą identyczne.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Zmienna o nazwie '%1' już istnieje.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "Zmienna o nazwie '%1' już istnieje i jest typu '%2'.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.VARIABLES_DYNAMIC_HUE = "310";return Blockly.Msg;}